# Astral Field Environment Configuration
# Copy this file to .env.local and fill in your actual values

# ===========================================
# DATABASE CONFIGURATION (REQUIRED)
# ===========================================
# Primary database connection - use Neon for best performance
DATABASE_URL=postgresql://username:password@hostname:port/database
NEON_DATABASE_URL=postgresql://username:password@hostname:port/database

# Example Neon connection string format:
# DATABASE_URL=postgresql://neondb_owner:your_password@ep-example-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require

# ===========================================
# AUTHENTICATION & SECURITY (REQUIRED)
# ===========================================
# JWT secret for token signing (minimum 64 characters for production)
# Generate with: openssl rand -hex 64
JWT_SECRET=your-64-character-jwt-secret-here

# Admin setup key for initial configuration (minimum 32 characters)
# Generate with: openssl rand -hex 32
ADMIN_SETUP_KEY=your-32-character-admin-key-here

# Encryption secret for sensitive data (minimum 32 characters)
# Generate with: openssl rand -hex 32
ENCRYPTION_SECRET=your-32-character-encryption-secret-here

# ===========================================
# SUPABASE CONFIGURATION (REQUIRED)
# ===========================================
# Get these from your Supabase project dashboard
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anonymous-key-here

# Supabase service role key (for server-side admin operations)
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key-here

# ===========================================
# AI SERVICES (OPTIONAL)
# ===========================================
# OpenAI API for GPT models
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your-openai-key-here

# Anthropic API for Claude models  
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your-claude-key-here

# Google Gemini API
# Get from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# DeepSeek API
# Get from: https://platform.deepseek.com/
DEEPSEEK_API_KEY=your-deepseek-key-here

# ===========================================
# SPORTS DATA API (OPTIONAL)
# ===========================================
# Sports data provider API key for live NFL data
# Options: SportsIO, ESPN API, etc.
SPORTS_IO_API_KEY=your-sports-api-key-here

# SportsData.io API for comprehensive NFL data
# Get from: https://sportsdata.io
SPORTSDATA_API_KEY=your-sportsdata-api-key-here
SPORTSDATA_API_URL=https://api.sportsdata.io/v3/nfl

# ESPN API for additional sports data
ESPN_API_KEY=your-espn-api-key-here

# Weather API for game conditions
WEATHER_API_KEY=your-weather-api-key-here
NEXT_PUBLIC_WEATHER_API_KEY=your-weather-api-key-here
NEXT_PUBLIC_NFL_VENUES_API=your-nfl-venues-api-here

# Public sports data keys for client-side usage
NEXT_PUBLIC_SPORTSDATA_API_KEY=your-public-sportsdata-key-here

# ===========================================
# PUSH NOTIFICATIONS (REQUIRED FOR PRODUCTION)
# ===========================================
# VAPID keys for web push notifications
# Generate with: npx web-push generate-vapid-keys
VAPID_PUBLIC_KEY=your-vapid-public-key-here
VAPID_PRIVATE_KEY=your-vapid-private-key-here

# Public VAPID key for client-side use
NEXT_PUBLIC_VAPID_KEY=your-vapid-public-key-here
NEXT_PUBLIC_VAPID_PUBLIC_KEY=your-vapid-public-key-here

# ===========================================
# CACHING & PERFORMANCE (OPTIONAL)
# ===========================================
# Redis URL for caching and session storage
# Local: redis://localhost:6379
# Cloud: redis://username:password@hostname:port
REDIS_URL=redis://localhost:6379

# Alternative Redis configurations
KV_URL=your-kv-store-url-here
UPSTASH_REDIS_URL=your-upstash-redis-url-here

# Redis connection details for WebSocket
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password-here

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
# Environment mode
NODE_ENV=development

# Your application URL
# Development: http://localhost:3000
# Production: https://your-domain.com
NEXT_PUBLIC_APP_URL=http://localhost:3000

# WebSocket URL for real-time features
NEXT_PUBLIC_WS_URL=ws://localhost:3005

# API secret key for internal API calls
API_SECRET_KEY=your-internal-api-secret-key-here

# Custom configuration key
CUSTOM_KEY=your-custom-configuration-key

# ===========================================
# DEPLOYMENT & MONITORING (OPTIONAL)
# ===========================================
# Disable Next.js telemetry
NEXT_TELEMETRY_DISABLED=1

# Deployment identifier for cache busting
DEPLOYMENT_ID=1757209766

# ===========================================
# DEVELOPMENT TOOLS (OPTIONAL)
# ===========================================
# Enable debug mode for detailed logging
DEBUG=false

# Enable console logging
LOG_CONSOLE=false

# Webhook URL for external notifications (Slack, Discord, etc.)
WEBHOOK_URL=your-webhook-url-here

# ===========================================
# SECURITY HEADERS (PRODUCTION)
# ===========================================
# Content Security Policy settings
CSP_REPORT_URI=https://your-domain.com/api/csp-report

# Maximum WebSocket connections
MAX_WS_CONNECTIONS=10000

# ===========================================
# ADMIN CONFIGURATION (PRODUCTION)
# ===========================================
# Admin user setup for initial deployment
ADMIN_EMAIL=admin@your-domain.com
ADMIN_USERNAME=admin
ADMIN_PASSWORD=your-secure-admin-password-here

# ===========================================
# MONITORING & LOGGING (PRODUCTION)
# ===========================================
# Metrics collection endpoint
METRICS_ENDPOINT=https://your-metrics-service.com/api/metrics
METRICS_API_KEY=your-metrics-api-key-here

# Logging service configuration
LOG_ENDPOINT=https://your-logging-service.com/api/logs
LOG_API_KEY=your-logging-api-key-here

# Sentry error tracking
SENTRY_DSN=https://your-sentry-dsn-here

# ===========================================
# DATABASE ADVANCED CONFIGURATION
# ===========================================
# Database connection pool settings
DB_MAX_CONNECTIONS=10
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=10000

# SSL mode for database connections
PGSSLMODE=require

# ===========================================
# TESTING CONFIGURATION
# ===========================================
# Test environment database
TEST_DATABASE_URL=postgresql://test:test@localhost:5432/test_db
TEST_SUPABASE_URL=https://test.supabase.co
TEST_SUPABASE_ANON_KEY=test-key
TEST_SUPABASE_SERVICE_KEY=test-service-key

# Playwright testing
PLAYWRIGHT_BASE_URL=http://localhost:3000

# CI/CD environment flag
CI=false

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
#
# 1. REQUIRED FOR ALL ENVIRONMENTS:
#    - DATABASE_URL or NEON_DATABASE_URL
#    - JWT_SECRET (64+ characters)
#    - ADMIN_SETUP_KEY (32+ characters)  
#    - ENCRYPTION_SECRET (32+ characters)
#    - NEXT_PUBLIC_SUPABASE_URL
#    - NEXT_PUBLIC_SUPABASE_ANON_KEY
#    - NEXT_PUBLIC_APP_URL
#
# 2. REQUIRED FOR PRODUCTION:
#    - All of the above
#    - VAPID_PUBLIC_KEY
#    - VAPID_PRIVATE_KEY
#
# 3. OPTIONAL (but recommended):
#    - At least one AI service API key (OPENAI_API_KEY, ANTHROPIC_API_KEY, etc.)
#    - SPORTS_IO_API_KEY or SPORTSDATA_API_KEY for live data
#    - REDIS_URL, KV_URL, or UPSTASH_REDIS_URL for better performance
#    - WEATHER_API_KEY for weather impact analysis
#
# 4. QUICK SETUP COMMANDS:
#    Generate secrets:
#      openssl rand -hex 64  # for JWT_SECRET
#      openssl rand -hex 32  # for ADMIN_SETUP_KEY & ENCRYPTION_SECRET
#      npx web-push generate-vapid-keys  # for VAPID keys
#
#    Check your configuration:
#      npm run check-env
#      node src/lib/env/check-env.js
#
# 5. HELP:
#    - Run: node src/lib/env/check-env.js --help
#    - See: docs/environment-setup.md
#    - Contact: support@astral-field.com