const fs = require('fs'); const path = require('path'); const quickFixes = [{ pattern: /(\w+)\s*\+\s*=\s*/g, replacement: '\ += ' }, { pattern: /scoring_ppr,\s*(\d+)/g, replacement: 'scoring_ppr: \' }, { pattern: /away,\s*(\d+)/g, replacement: 'away: \' }, { pattern: /settingsConfigured,\s*settings\.length/g, replacement: 'settingsConfigured: settings.length' }]; function walkDir(dir) { let fixes = 0; const items = fs.readdirSync(dir); for (const item of items) { const fullPath = path.join(dir, item); const stat = fs.statSync(fullPath); if (stat.isDirectory() && \!['node_modules', '.git', '.next'].includes(item)) { fixes += walkDir(fullPath); } else if (item.match(/\.(ts|tsx)$/)) { let content = fs.readFileSync(fullPath, 'utf8'); let changed = false; quickFixes.forEach(fix => { if (content.match(fix.pattern)) { content = content.replace(fix.pattern, fix.replacement); changed = true; } }); if (changed) { fs.writeFileSync(fullPath, content, 'utf8'); console.log('Fixed: ' + path.relative(process.cwd(), fullPath)); fixes++; } } } return fixes; } const totalFixes = walkDir('./src'); console.log('Applied ' + totalFixes + ' quick fixes');
